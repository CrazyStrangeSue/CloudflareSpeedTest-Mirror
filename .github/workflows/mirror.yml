# Final version, forcing update
name: Sync Upstream Release

on:
  # 每天 UTC 时间 2 点运行一次
  schedule:
    - cron: '0 2 * * *'
  # 同样允许手动触发
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # 步骤 1: 获取上游（原作者）的最新版本号
      - name: Get latest upstream release tag
        id: get_upstream_tag
        run: |
          LATEST_TAG=$(curl -sL -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/XIU2/CloudflareSpeedTest/releases/latest" | jq -r .tag_name)
          echo "tag=${LATEST_TAG}" >> $GITHUB_OUTPUT
        
      # 步骤 2: 获取我们自己（镜像）的最新版本号
      - name: Get latest mirror release tag
        id: get_mirror_tag
        run: |
          LATEST_TAG=$(curl -sL -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r .tag_name)
          echo "tag=${LATEST_TAG}" >> $GITHUB_OUTPUT

      # 步骤 3: 如果版本更新，则下载所有附件
      - name: Download all assets from new release
        id: download
        if: steps.get_upstream_tag.outputs.tag != steps.get_mirror_tag.outputs.tag
        run: |
          UPSTREAM_TAG=${{ steps.get_upstream_tag.outputs.tag }}
          echo "New version found: ${UPSTREAM_TAG}. Proceeding to download all assets."
          
          # 直接从 API 获取该版本的所有附件的下载链接
          API_URL="https://api.github.com/repos/XIU2/CloudflareSpeedTest/releases/tags/${UPSTREAM_TAG}"
          echo "Fetching asset list from ${API_URL}"

          # 使用 jq 提取所有附件的下载 URL，然后用一个循环和 wget 全部下载下来
          # 这是最可靠的方式
          ASSET_URLS=$(curl -sL -H "Accept: application/vnd.github.v3+json" "${API_URL}" | jq -r '.assets[].browser_download_url')
          
          if [ -z "$ASSET_URLS" ]; then
            echo "No assets found for tag ${UPSTREAM_TAG}."
            exit 1
          fi

          echo "Downloading assets..."
          echo "${ASSET_URLS}" | while read -r url; do
            echo "-> Downloading ${url}"
            wget -q --show-progress --progress=bar:force:noscroll --no-check-certificate "${url}"
          done

      # 步骤 4: 创建新 Release 并上传所有下载好的附件
      - name: Create new release and upload all assets
        if: steps.download.conclusion == 'success'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_upstream_tag.outputs.tag }}
          # 使用通配符 *.* 上传当前目录下所有下载好的文件
          files: |
            *.tar.gz
            *.zip
